package emergencyRoom;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Serializable;
import java.util.Scanner;
import java.io.File;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;

public class Physician extends User implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3411648746195000152L;
	
	/**
	 * Updating the prescriptions of a particular patient by retrieving a 
	 * Prescriptions object and accessing the update method.
	 * 
	 * @param p A patient object.
	 * @param time the current time generated by the Android device.
	 * @param title the systolic The name of the medication.
	 * @param instruction The instruction for the medicine's use.
	 * @throws MissingPatientException When invalid input (empty string, or all numbers) is given.
	 */	
	public void update_prescriptions(Patient p,long time, String title, String instruction) throws MissingPatientException {
		//Error checking for empty string and if its only numbers
		String regex = "[0-9]+";
		if (title.equals("") || instruction.equals("")) {
			throw new MissingPatientException("Invalid, please enter a title and description."); 
		} else if (title.matches(regex) || instruction.matches(regex)){
			throw new MissingPatientException("Please enter alphanumeric input.");
		} else {
			p.getPrescriptions().update(time, title, instruction);
		}
	
	}
	
	/**
	 * Saves the patient's prescription into the patient's records
	 * @param fw the file to write in
	 * @param patient the patient
	 * @param filePath where the file is located
	 * @throws IOException throws IOException if the file is not found
	 */
	public void savePrescription(FileWriter fw, Patient patient, String filePath) throws IOException {
		try {
			String info = "";
			Scanner scanner = new Scanner(new FileInputStream(filePath));
			while (scanner.hasNextLine()){
				info = scanner.nextLine();
			}
			String[] fixed = info.split("!");
			info = fixed[0] + "!" +  fixed[1] + "!";
			writeInPrescription(filePath, info);
			fw.write(info + patient.getPrescriptions().toString() + "\n");
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				fw.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}
	/**
	 * Writes the prescription at correct position in the patient visit record file
	 * @param file where the patient's file is located
	 * @param lineToAdd the prescriptions to be added on to the file
	 */
	public void writeInPrescription(String file, String lineToAdd){
		try{
		File inputFile = new File(file + ".txt");
		File tempFile = new File("TempFile.txt");

		BufferedReader oldReader = new BufferedReader(new FileReader(inputFile));
		BufferedWriter newWriter = new BufferedWriter(new FileWriter(tempFile));
		String current;
		while((current = oldReader.readLine()) != null) {
			if (!current.contains(lineToAdd)){
				newWriter.write(current);
				newWriter.newLine();
			}
		}
		newWriter.close();
        oldReader.close();
        tempFile.renameTo(inputFile);
		  }
	    catch (FileNotFoundException ex) {
	      ex.printStackTrace();
	    }
	    catch (IOException ex) {
	      ex.printStackTrace();
	    }
	  }
}
